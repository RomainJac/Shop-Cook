package com.example.demo.Controllers;

import java.util.ArrayList;
import java.util.List;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Controller;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.PostMapping;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestParam;
import org.springframework.web.bind.annotation.ResponseBody;

import com.example.demo.ingredients.DietaryRestriction;
import com.example.demo.ingredients.Ingredient;
import com.example.demo.repositories.IngredientRepository;

@Controller
@RequestMapping(path="/ingredients") // This means URL's start with /demo (after Application path)
public class MainController {
      @Autowired // This means to get the bean called userRepository
         // Which is auto-generated by Spring, we will use it to handle the data
  private IngredientRepository ingredientRepository;

  @PostMapping (path="/add") // Map ONLY POST Requests
    public @ResponseBody String addNewIngredient (@RequestParam String name
        , @RequestParam String dietaryRestrictions, @RequestParam float nutriscore, @RequestParam int calories) {
        // @ResponseBody means the returned String is the response, not a view name
        // @RequestParam means it is a parameter from the GET or POST request
        List<DietaryRestriction> dietaryRestrictionsList = new ArrayList<>();
        for (String s : dietaryRestrictions.split(";")) {
            dietaryRestrictionsList.add(new DietaryRestriction(s));
        }
        Ingredient n = new Ingredient(name, dietaryRestrictionsList, nutriscore, calories);
        ingredientRepository.save(n);
        return "Saved";
    }
    @GetMapping(path="/all")
    public @ResponseBody Iterable<Ingredient> getAllIngredients() {
        // This returns a JSON or XML with the users
        return ingredientRepository.findAll();
    }
}
